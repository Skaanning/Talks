# Snippets for Atom
'.source.fsharp':
  'web, news, toDateTime':
    'prefix': 'wn-tdt'
    'body': """
    let toDateTime (timestamp:int) =
      let start = DateTime(1970,1,1,0,0,0,DateTimeKind.Utc)
      start.AddSeconds(float timestamp).ToLocalTime()
    """

  'web, news, formatWeather':
    'prefix': 'wn-fwt'
    'body': """
    let formatWeather =
      sprintf "<li><h3>%s</h3><img src=\"http://openweathermap.org/img/w/%s.png\"><p>Day: %.0f°C</p><p>Night: %.0f°C</p></li>"
    """

  'web, news, formatNews':
    'prefix': 'wn-fns'
    'body': """
    let formatNews =
      sprintf "<li><img src=\"%s\" /><h3><a href=\"%s\">%s</a></h3><p>%s</p></li>"
    """

  'web, news, html':
    'prefix': 'wn-html'
    'body': """
    let html = File.ReadAllText(__SOURCE_DIRECTORY__ + "/web/index.html")
    """

  'web, news, replace':
    'prefix': 'wn-replace'
    'body': """OK (html.Replace("#1", news).Replace("#2", weather)) ctx"""

  'web, chat, distribute':
    'prefix': 'wch-distr'
    'body': """
    type AgentDict = Map<string, MailboxProcessor<ChatMessage>>

    let router =
      MailboxProcessor.Start(fun inbox ->
        let rec loop (agents:AgentDict) = async {
          // TODO: Receive 'room' and 'message'
          // TODO: Start new chat room or pick existing
          return! loop agents }
        loop Map.empty
      )
    """

  'web, chat, read':
    'prefix': 'wch-read'
    'body': """
    let name =
      match ctx.request.queryParam "name" with
      | Choice1Of2 n -> n
      | _ -> "Anonymous"
    use ms = new MemoryStream(ctx.request.rawForm)
    use sr = new StreamReader(ms)
    let text = sr.ReadToEnd()
    """

  'web, chat, nocache':
    'prefix': 'wch-nocache'
    'body': """
    let noCache =
      Writers.setHeader "Cache-Control" "no-cache, no-store, must-revalidate"
      >>= Writers.setHeader "Pragma" "no-cache"
      >>= Writers.setHeader "Expires" "0"
    """

  'web, chat, routing':
    'prefix': 'wch-routing'
    'body': """
      choose
        [ // TODO: Handle /chat with GET & no chache using getMessage
          // TODO: Handle /post with POST & no cache using postMessage

          // TODO: Handle /<room>/ using index
          // TODO: Handle /<room>/chat and /<room>/post
          NOT_FOUND "Found no handlers" ]
    """
